[{"C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\index.js":"1","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\App.js":"2","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\About.js":"3","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Contact.js":"4","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Home.js":"5","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Projects.js":"6","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Back.js":"7"},{"size":412,"mtime":1612376953081,"results":"8","hashOfConfig":"9"},{"size":1148,"mtime":1612461469091,"results":"10","hashOfConfig":"9"},{"size":870,"mtime":1612465018659,"results":"11","hashOfConfig":"9"},{"size":1692,"mtime":1612553854305,"results":"12","hashOfConfig":"9"},{"size":2482,"mtime":1612557037003,"results":"13","hashOfConfig":"9"},{"size":3734,"mtime":1612638421780,"results":"14","hashOfConfig":"9"},{"size":554,"mtime":1612466060929,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jjl2i1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\index.js",[],["34","35"],"C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\App.js",["36"],"import About from './Components/About';\nimport Contact from './Components/Contact';\nimport Home from './Components/Home';\nimport Projects from './Components/Projects';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\n\n\nconst GlobalStyle = createGlobalStyle`\n* {\n      margin: 0;\n      font-family: Plain,Helvetica Neue,Arial,Noto Sans,sans-serif;\n      background-color:black;\n\n}\n  *, *::after, *::before {\n    box-sizing: border-box;\n  }\n  body {\n    /* font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"; */\n    height: 100vh;\n\n  }\n`\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n\n     \n      <Router>\n\n        <Switch>\n          <Route path='/about'> <About /> </Route>\n          <Route path='/projects'> <Projects /> </Route>\n          <Route path='/contact'> <Contact /> </Route>\n          <Route path='/'> <Home /> </Route>\n        </Switch>\n      </Router>\n  </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\About.js",[],"C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Contact.js",["37","38","39","40"],"import Back from './Back';\r\nimport github from './Images/github.png'\r\nimport linkedin from './Images/linkedin.jpg'\r\nimport email from './Images/email.png'\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\ncolor:white;\r\nposition:absolute;\r\ntop:20%;\r\nleft:15%;\r\nh1{\r\n    font-size:100px;\r\n    letter-spacing:3px;\r\n    margin-bottom:80px;\r\n}\r\n\r\n\r\n`\r\nconst StyledSection = styled.section `\r\n  display:flex;\r\n   margin-top:25px;\r\nh5{\r\n    font-size: 25px;\r\n    letter-spacing: 3px;\r\n    line-height: 40px;\r\n    margin-top:10px;\r\n}\r\na{\r\n    margin-left:25px;\r\n  \r\n    color:white;\r\n    text-decoration: none;\r\n}\r\nsection{\r\n    width:50px;\r\n    height:50px;\r\n}\r\nimg {\r\n    width:100%;\r\n    height:auto;\r\n}\r\n`\r\nfunction Contact() {\r\n\r\n    return (\r\n        <div>\r\n            <Back />\r\n            <StyledDiv>\r\n                <h1>Get In Touch</h1>\r\n            <StyledSection>\r\n                <section><img src={email} alt=\"image of an envelope\" /></section>\r\n                    <h5><a href=\"mailto:t.bjargrim@gmail.com\" target=\"_blank\">t.bjargrim@gmail.com</a> </h5>\r\n            </StyledSection>\r\n            <StyledSection>\r\n                <section><img src={github} alt=\"github logo\" /></section>\r\n                    <h5><a href=\"https://github.com/tbjargrim\" target=\"_blank\">View my github</a></h5>\r\n            </StyledSection>\r\n            <StyledSection>\r\n                <section><img src={linkedin} alt=\"linkedins logo\" /></section>\r\n                    <h5><a href=\"http://www.linkedin.com/in/tbjargrim\" target=\"_blank\">LinkedIn</a></h5>\r\n            </StyledSection>\r\n            </StyledDiv>\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default Contact;","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Home.js",["41"],"import React, { useState } from 'react';\r\nimport test from './Images/test.jpg'\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeDiv=styled.div`\r\n    background-color:black;\r\n    height: 100vh;\r\n    width:100%;\r\n`\r\nconst StyledDiv = styled.div`\r\n    position:absolute;\r\n    left:15%;\r\n    top:40%;\r\n    line-height:80px;\r\n    z-index:1;\r\n    h3 {\r\n    color:white;\r\n    text-transform:uppercase;\r\n    letter-spacing:2px;\r\n    font-size:60px;\r\n    transform:360deg;\r\n    transform-origin:left;\r\n    background:transparent;\r\n    }\r\n`\r\nconst StyledLink =styled(Link) `\r\ntext-decoration:none;\r\ncolor:rgb(62, 137, 137);\r\nfont-size:70px;\r\n   background:transparent;\r\n&:hover {\r\n   color:rgb(86, 77, 101);\r\n   transition:all 0.3s ease-out;\r\n      background:transparent;\r\n}\r\n\r\n`\r\nconst ImageSection = styled.section`\r\n    position:absolute;\r\n    right:1%;\r\n    bottom:0;\r\n    width:1000px;\r\n    height:800px;\r\nimg {\r\n    width:100%;\r\n    height:auto;\r\n}\r\n`\r\nfunction Home() {\r\n    let startText= ' Therese';\r\n    let projectLink = ' Front-End Developer ';\r\n    let contactLink = ' get in touch';\r\n    const [text,setText] = useState(startText);\r\n    const [projectText, setProjectText] =useState(projectLink);\r\n    const [contactText, setContactText] = useState(contactLink);\r\n\r\n\r\n    return (\r\n        <HomeDiv>\r\n        <StyledDiv>          \r\n            <h3> Hi, I´m \r\n            <StyledLink to='/about'\r\n                onMouseOver={() => setText(' About')}\r\n                onMouseLeave={() => setText(startText)}>\r\n                    {text}\r\n            </StyledLink>\r\n            </h3>\r\n            <h3>\r\n                an upcoming \r\n            </h3>\r\n            <h3>\r\n            <StyledLink to='/projects'\r\n                    onMouseOver={() => setProjectText(' Projects ')}\r\n                    onMouseLeave={() => setProjectText(projectLink)}>\r\n                    {projectText}\r\n                </StyledLink>\r\n            </h3>\r\n            <h3>\r\n                Let´s\r\n            <StyledLink to='/contact'\r\n                    onMouseOver={() => setContactText(' contact')}\r\n                    onMouseLeave={() => setContactText(contactLink)}>\r\n                    {contactText}\r\n                </StyledLink>\r\n            </h3>\r\n        </StyledDiv>\r\n            <ImageSection>\r\n                <img src={test} alt=\"Image of Therese\" />\r\n            </ImageSection>\r\n        </HomeDiv>\r\n    )\r\n}\r\nexport default Home;\r\n","C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Projects.js",["42","43","44","45","46"],"C:\\Users\\intri\\Desktop\\MyProjects\\portfolio\\src\\Components\\Back.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":13,"column":8,"nodeType":"53","messageId":"54","endLine":13,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":53,"column":26,"nodeType":"57","endLine":53,"endColumn":72},{"ruleId":"58","severity":1,"message":"59","line":54,"column":25,"nodeType":"57","endLine":54,"endColumn":79},{"ruleId":"58","severity":1,"message":"59","line":58,"column":25,"nodeType":"57","endLine":58,"endColumn":80},{"ruleId":"58","severity":1,"message":"59","line":62,"column":25,"nodeType":"57","endLine":62,"endColumn":88},{"ruleId":"55","severity":1,"message":"56","line":89,"column":17,"nodeType":"57","endLine":89,"endColumn":58},{"ruleId":"60","severity":1,"message":"61","line":61,"column":25,"nodeType":"57","endLine":61,"endColumn":204},{"ruleId":"60","severity":1,"message":"61","line":71,"column":25,"nodeType":"57","endLine":71,"endColumn":204},{"ruleId":"60","severity":1,"message":"61","line":81,"column":25,"nodeType":"57","endLine":81,"endColumn":204},{"ruleId":"60","severity":1,"message":"61","line":91,"column":25,"nodeType":"57","endLine":91,"endColumn":204},{"ruleId":"60","severity":1,"message":"61","line":100,"column":25,"nodeType":"57","endLine":100,"endColumn":204},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]